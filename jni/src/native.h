#ifndef NATIVE_H_
#define NATIVE_H_

///////////////////////////////////////////////////////////////////////////////////////////////

// STL
#include <string>

// OpenGL
#include <GLES/gl.h>
#include <GLES/glext.h>

// Custom
#include <inc/JNI.h>
#include "heightmap/Heightmap.h"

///////////////////////////////////////////////////////////////////////////////////////////////

// JNI
#define JNIJAVAPREFIX(DIR) Java_##DIR
#define JNIPACKAGE(DIR) JNIJAVAPREFIX(org_yuno_apps_heightmap_jni_##DIR)
#define JNIPREFIX(DIR) JNIPACKAGE(JNI_##DIR)

#define JNI(F,...) JNIPREFIX(F)(JNIEnv *env,jobject obj,##__VA_ARGS__)

///////////////////////////////////////////////////////////////////////////////////////////////

using namespace std;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus
extern "C" {
#endif

jint JNI(main);
jint JNI(onDrawFrame);
jint JNI(onSurfaceCreated, jint width, jint height);
jint JNI(onSurfaceChanged, jint width, jint height);
jint JNI(surfaceDestroyed);
jint JNI(initArray, jintArray arr, jint width, jint height, jfloat scale);
jint JNI(toggleFlag, jint flag);

#ifdef __cplusplus
}
#endif

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

Heightmap *m_heightmap;

///////////////////////////////////////////////////////////////////////////////////////////////

#endif /* NATIVE_H_ */
